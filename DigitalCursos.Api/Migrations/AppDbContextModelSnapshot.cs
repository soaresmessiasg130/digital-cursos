// <auto-generated />
using System;
using DigitalCursos.Api.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace DigitalCursos.Api.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                .HasAnnotation("ProductVersion", "3.1.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("DigitalCursos.Models.Models.Aluno", b =>
                {
                    b.Property<int>("AlunoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("CursoId")
                        .HasColumnType("integer");

                    b.Property<string>("Email")
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<byte[]>("Foto")
                        .HasColumnType("bytea");

                    b.Property<int>("Genero")
                        .HasColumnType("integer");

                    b.Property<DateTime>("Nascimento")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Nome")
                        .HasColumnType("character varying(150)")
                        .HasMaxLength(150);

                    b.Property<string>("Sobrenome")
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.HasKey("AlunoId");

                    b.HasIndex("CursoId");

                    b.ToTable("DCAluno");

                    b.HasData(
                        new
                        {
                            AlunoId = 1,
                            CursoId = 1,
                            Email = "soaresmessiasg130@gmail.com",
                            Genero = 0,
                            Nascimento = new DateTime(1997, 8, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nome = "Messias Soares",
                            Sobrenome = "Paiva"
                        },
                        new
                        {
                            AlunoId = 2,
                            CursoId = 2,
                            Email = "soaresmessiasg130@gmail.com",
                            Genero = 0,
                            Nascimento = new DateTime(1997, 8, 13, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nome = "Messias Soares",
                            Sobrenome = "Paiva"
                        },
                        new
                        {
                            AlunoId = 3,
                            CursoId = 3,
                            Email = "soaresmessiasg130@gmail.com",
                            Genero = 0,
                            Nascimento = new DateTime(1997, 8, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nome = "Messias Soares",
                            Sobrenome = "Paiva"
                        });
                });

            modelBuilder.Entity("DigitalCursos.Models.Models.Curso", b =>
                {
                    b.Property<int>("CursoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("CargaHoraria")
                        .HasColumnType("integer");

                    b.Property<string>("CursoNome")
                        .HasColumnType("character varying(150)")
                        .HasMaxLength(150);

                    b.Property<string>("Descricao")
                        .HasColumnType("character varying(250)")
                        .HasMaxLength(250);

                    b.Property<DateTime>("Inicio")
                        .HasColumnType("timestamp without time zone");

                    b.Property<byte[]>("Logo")
                        .HasColumnType("bytea");

                    b.Property<decimal>("Preco")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("CursoId");

                    b.ToTable("DCCurso");

                    b.HasData(
                        new
                        {
                            CursoId = 1,
                            CargaHoraria = 40,
                            CursoNome = "ADS",
                            Inicio = new DateTime(2020, 8, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Preco = 180.00m
                        },
                        new
                        {
                            CursoId = 2,
                            CargaHoraria = 44,
                            CursoNome = "Redes",
                            Inicio = new DateTime(2020, 8, 13, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Preco = 200.00m
                        },
                        new
                        {
                            CursoId = 3,
                            CargaHoraria = 60,
                            CursoNome = "Engenharia TI",
                            Inicio = new DateTime(2020, 8, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Preco = 330.00m
                        });
                });

            modelBuilder.Entity("DigitalCursos.Models.Models.Aluno", b =>
                {
                    b.HasOne("DigitalCursos.Models.Models.Curso", "Curso")
                        .WithMany("Alunos")
                        .HasForeignKey("CursoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
